// Code generated by MockGen. DO NOT EDIT.
// Source: public-api/client (interfaces: UserClient)

// Package mocks is a generated GoMock package.
package mocks

import (
	model "public-api/model"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockUserClient is a mock of UserClient interface.
type MockUserClient struct {
	ctrl     *gomock.Controller
	recorder *MockUserClientMockRecorder
}

// MockUserClientMockRecorder is the mock recorder for MockUserClient.
type MockUserClientMockRecorder struct {
	mock *MockUserClient
}

// NewMockUserClient creates a new mock instance.
func NewMockUserClient(ctrl *gomock.Controller) *MockUserClient {
	mock := &MockUserClient{ctrl: ctrl}
	mock.recorder = &MockUserClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUserClient) EXPECT() *MockUserClientMockRecorder {
	return m.recorder
}

// CreateUser mocks base method.
func (m *MockUserClient) CreateUser(arg0 string) (*model.User, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateUser", arg0)
	ret0, _ := ret[0].(*model.User)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateUser indicates an expected call of CreateUser.
func (mr *MockUserClientMockRecorder) CreateUser(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateUser", reflect.TypeOf((*MockUserClient)(nil).CreateUser), arg0)
}

// FetchUserByID mocks base method.
func (m *MockUserClient) FetchUserByID(arg0 int64) (*model.User, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FetchUserByID", arg0)
	ret0, _ := ret[0].(*model.User)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FetchUserByID indicates an expected call of FetchUserByID.
func (mr *MockUserClientMockRecorder) FetchUserByID(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FetchUserByID", reflect.TypeOf((*MockUserClient)(nil).FetchUserByID), arg0)
}

// FetchUsersByIDs mocks base method.
func (m *MockUserClient) FetchUsersByIDs(arg0 []int64) (map[int64]*model.User, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FetchUsersByIDs", arg0)
	ret0, _ := ret[0].(map[int64]*model.User)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FetchUsersByIDs indicates an expected call of FetchUsersByIDs.
func (mr *MockUserClientMockRecorder) FetchUsersByIDs(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FetchUsersByIDs", reflect.TypeOf((*MockUserClient)(nil).FetchUsersByIDs), arg0)
}
